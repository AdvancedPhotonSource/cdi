// program flow
gc = 5;

// parameters for data preparation
aliens = ((170,220,112,195,245,123), (50,96,10,60,110,20))
binning = [2,2,2];
center_shift = [0,0,0];
zero_pad = [0,0,0]

//algorithm_sequence = ((3, ("ER",2), ("HIO", 2), ("ER", 2)), (2, ("ER",3), ("HIO",3)))
//algorithm_sequence = ((1, ("ER",6)))
algorithm_sequence = ((2, ("ER",19), ("HIO", 10)), (1,("ER",10)))

// twin defines at which iteration to cut half of the array(i.e. multiply by 0s), it is done in ER/HIO
// if negative, no action
twin = 2;

amp_threshold = 2.0;
amp_threshold_fill_zeros = true;

phase_min = -2.0;
phase_max = 2.0;
beta = .9;

// support
// trigger list contains starting iteration, step, and ending iteration (if missing, run to the end)
//support_triggers = ((5, 5, 300), (1, 2));
support_triggers = ((4, 5, 300));
support_type = "GAUSS";
support_threshold = 0.1;
support_threshold_adjust = false;
support_sigma = 1;
support_area = [.5,.5,.5];

roi = [32,32,32];

// partial coherence
// if type is not defined, partial coherence is not applied
partial_coherence_type = "LUCY";
partial_coherence_triggers = ((14, 15));
partial_coherence_iteration_num = 20;
partial_coherence_normalize = true;
// this is an area that will determine coherence, coherence array will come with this size
partial_coherence_roi = [32,32,32];
// this is an area of the coherence array that will be used to apply coherence to amplitudes
partial_coherence_kernel = [32,32,32];
partial_coherence_clip = false;

regularized_amp = "GAUSS"

//avg_iterations = 5;

// wavelength
lamda = .13933;
// delta (degrees)
delta = 30.1;
// gamma (degrees)
gamma = 14.0;
// camera distance (m)
arm=0.6350;
// angular step size
dth=0.000174532925199;

// detector pixel sixe
pixel = [55.0e-6, 55.0e-6];

// save in two vtk files
save_two_files = False;

// size to crop the image array
crop = [120,120,120]

// the dir+prefix of results vtk files
res = "vtk/test_"






